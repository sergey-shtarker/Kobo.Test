//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kobo.Test.MvcApplication.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/Kobo.Test.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Kobo.Test.MvcApplication.ServiceReference.Customer CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Kobo.Test.MvcApplication.ServiceReference.Supplier SupplierField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Kobo.Test.MvcApplication.ServiceReference.Customer Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Kobo.Test.MvcApplication.ServiceReference.Supplier Supplier {
            get {
                return this.SupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierField, value) != true)) {
                    this.SupplierField = value;
                    this.RaisePropertyChanged("Supplier");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/Kobo.Test.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Supplier", Namespace="http://schemas.datacontract.org/2004/07/Kobo.Test.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Supplier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactManager {
            get {
                return this.ContactManagerField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactManagerField, value) != true)) {
                    this.ContactManagerField = value;
                    this.RaisePropertyChanged("ContactManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IPersonService")]
    public interface IPersonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/Create", ReplyAction="http://tempuri.org/IPersonService/CreateResponse")]
        long Create(Kobo.Test.MvcApplication.ServiceReference.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/Create", ReplyAction="http://tempuri.org/IPersonService/CreateResponse")]
        System.Threading.Tasks.Task<long> CreateAsync(Kobo.Test.MvcApplication.ServiceReference.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/Read", ReplyAction="http://tempuri.org/IPersonService/ReadResponse")]
        Kobo.Test.MvcApplication.ServiceReference.Person Read(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/Read", ReplyAction="http://tempuri.org/IPersonService/ReadResponse")]
        System.Threading.Tasks.Task<Kobo.Test.MvcApplication.ServiceReference.Person> ReadAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/Update", ReplyAction="http://tempuri.org/IPersonService/UpdateResponse")]
        void Update(Kobo.Test.MvcApplication.ServiceReference.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/Update", ReplyAction="http://tempuri.org/IPersonService/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(Kobo.Test.MvcApplication.ServiceReference.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/Delete", ReplyAction="http://tempuri.org/IPersonService/DeleteResponse")]
        void Delete(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/Delete", ReplyAction="http://tempuri.org/IPersonService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/ReadAll", ReplyAction="http://tempuri.org/IPersonService/ReadAllResponse")]
        System.Collections.Generic.List<Kobo.Test.MvcApplication.ServiceReference.Person> ReadAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/ReadAll", ReplyAction="http://tempuri.org/IPersonService/ReadAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Kobo.Test.MvcApplication.ServiceReference.Person>> ReadAllAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPersonServiceChannel : Kobo.Test.MvcApplication.ServiceReference.IPersonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PersonServiceClient : System.ServiceModel.ClientBase<Kobo.Test.MvcApplication.ServiceReference.IPersonService>, Kobo.Test.MvcApplication.ServiceReference.IPersonService {
        
        public PersonServiceClient() {
        }
        
        public PersonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PersonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public long Create(Kobo.Test.MvcApplication.ServiceReference.Person person) {
            return base.Channel.Create(person);
        }
        
        public System.Threading.Tasks.Task<long> CreateAsync(Kobo.Test.MvcApplication.ServiceReference.Person person) {
            return base.Channel.CreateAsync(person);
        }
        
        public Kobo.Test.MvcApplication.ServiceReference.Person Read(long id) {
            return base.Channel.Read(id);
        }
        
        public System.Threading.Tasks.Task<Kobo.Test.MvcApplication.ServiceReference.Person> ReadAsync(long id) {
            return base.Channel.ReadAsync(id);
        }
        
        public void Update(Kobo.Test.MvcApplication.ServiceReference.Person person) {
            base.Channel.Update(person);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(Kobo.Test.MvcApplication.ServiceReference.Person person) {
            return base.Channel.UpdateAsync(person);
        }
        
        public void Delete(long id) {
            base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(long id) {
            return base.Channel.DeleteAsync(id);
        }
        
        public System.Collections.Generic.List<Kobo.Test.MvcApplication.ServiceReference.Person> ReadAll() {
            return base.Channel.ReadAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Kobo.Test.MvcApplication.ServiceReference.Person>> ReadAllAsync() {
            return base.Channel.ReadAllAsync();
        }
    }
}
